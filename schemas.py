#тут мы описываем pydentic модели. Это нам поможет сериализовать и валидировать данные.
#импортируем базовую модель из pydantic. Он основан на типах питона. Можно описывать атрибуты класса и указывать тип. На основании типов pydantic будет валидировать данные
from typing import List

from pydantic import BaseModel
from datetime import date


class Genre(BaseModel):
    name: str


#создаем класс и наследуемся от BaseModel - базовая модель pydantic.
class Book(BaseModel):#это будет аудиокнига, описываем поля книги. Описание делается так: пишем имя поля: тип
    title: str
    writer: str
    duration: str
    date: date#для указания типа даты нужно импортировать дату
    summary: str
    genres: List[Genre]#указали что жанры будут типа str но по умолчанию тип None. Потом сделали что жанры будут объектами класс Genre и там будет несколько классов, то есть будет список жанров
    pages: int
#когда передаем данные через документацию они должны иметь возможность конвертироваться в нужный тип данных который прописан в классе с моделью
#сделаем так чтобы можно было передавать несколько данных, и чтобы передавались как pydantic модель



